"""
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""
"""
def create_terms(ceiling):
    terms = [1]
    a = 1
    b = 1
    while True:
        c = a
        a = b
        b = b + c
        if (b > ceiling):
            break
        else:
            terms.append(b)

    #print(terms)
    return terms

def sum_even(terms):
    sum_of_evens = 0
    for i in range(len(terms)):
        if (terms[i] % 2 == 0):
            sum_of_evens += terms[i]

    return sum_of_evens

x = int(input("ceiling = "))
print(sum_even(create_terms(x)))
"""

import helper

print(sum(filter(lambda x: x % 2, helper.fiblist(4000000))))


        
